#include <iostream>
#define int long long
using namespace std;

signed main() {
    
	int t;
	cin>>t;
	
	int a=1;
	
	while(a<=t){
	    
	    int x,y,z;
	    
	    cin>>x>>y>>z;
	    
	    if((x<y) and (y<z)){
	        cout<<0;
	    }
	    else if((x==y) || (y==z) || (x==z)){
	        cout<<-1;
	    }else{
	        
	        int ans=0;
	        
	        for(int i=30;i>=0;i--){
	            
	            if(x>y){
	                
	                if( (x&(1<<i))!=0 and (y&(1<<i))==0 ){
	                    ans|=1<<i;
	                    break;
	                }
	            }
	        }
	        
	         for(int i=30;i>=0;i--){
	            
	            if(y>z){
	                
	                if( (y&(1<<i))!=0 and (z&(1<<i))==0 ){
	                    ans|=1<<i;
	                    break;
	                }
	            }
	        }
	        
	        if( (x^ans)<(y^ans) and (y^ans)<(z^ans) ){
	            cout<<ans;
	        }else{
	            cout<<-1;
	        }
	    }
	    
	    cout<<endl;
	    
	    a++;
	}
	
	return 0;
}






Hindi Video Explanation :- https://youtu.be/kwwtaGYr8TI

Here we can divide into three cases :-

Case-1

when any of two values are equal , int this case we cannot make them (ab) it means there is a bit (1) that is set in a but unset (0) in b. So we want to unset it from a and set it in b so that (a>b) if valid answer exist.
Initially ans = 0

Suppost ith bit satisfy the above condition , so we want that this bit should also be set in our answer , so if we do xor it will unset that bit in 'a' and set it in 'b' . ans = ans OR (1< i) ~ setting the ith bit

if (b>c) we will do the same as above, find the biggest bit which is set in 'b' and unset in 'c' and would unseet it from 'b' and set it in 'c'

Suppose 'jth' bit satisfy this condition so we need this 'jth' bit set in our answer . we do OR of ans |= ( 1 < j ) ~(2^j)
Now we have our answer , we will check if this satisfies our condition or not .

If it satisfies then we prinnt ans else print -1 ( no SOLUTION exist
